Modules:
  get:
    parameters:
      - in: query
        name: sortOrder
        required: false
        schema:
          type: array
          items:
            $ref: "../sort-order.yaml#/SortOrder"
      - in: query
        name: page
        required: false
        schema:
          type: integer
          format: int64
      - in: query
        name: pageOffset
        required: false
        schema:
          type: integer
          format: int64
    tags:
      - modules
    operationId: getModules
    summary: Returns list of modules
    responses:
      200:
        description: Gets module list
        content:
          application/json:
            schema:
              $ref: "#/components/ModuleList"
  post:
    tags:
      - modules
    operationId: createModule
    summary: Create a module
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/ModuleRequestBody'
    responses:
      201:
        description: Ok, module created
        content:
          application/json:
            schema:
              $ref: '#/components/ModuleResponseBody'

Module:
  parameters:
    - in: path
      name: moduleId
      required: true
      schema:
        type: integer
        format: int64      
      description: The id of module
  get:
    tags:
      - modules
    operationId: getModule
    summary: Returns one module
    responses:  
      200:
        description: Returns one module
        content:
          application/json:
            schema:
              $ref: "#/components/Module"
      404:
        description: Module does not exist

  post:
    tags:
      - modules
    operationId: cloneModule
    summary: Clones a module
    responses:
      201:
        description: Ok, module cloned
        content:
          application/json:
            schema:
              $ref: '#/components/ModuleResponseBody'
      404:
        description: Module does not exist
  put:
    tags:
      - modules
    operationId: updateModule
    summary: updateModule
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/ModuleRequestBodyUpdate'
    responses:
      204:
        description: Ok, module updated
      404:
        description: Module does not exist
  delete:
    tags:
      - modules
    operationId: deleteModule
    summary: Deletes a module
    responses:
      204:
        description: Ok, module deleted
      404:
        description: Module does not exist

components:
  ModuleList:
    required:
      - items
      - total
    properties:
      items:
        type: array
        items:
          $ref: "#/components/Module"
      total:
        type: integer
        format: int64

  Module:
    required:
      - id
      - pageId
      - slotId
      - moduleType
      - weight
      - version
    properties:
      id:
        type: integer
        format: int64
        description: Id of the module
      pageId:
        type: integer
        format: int64
        description: Page id to which the module belongs to
      slotId:
        type: integer
        format: int64
        description: Slot id in which is the module displayed
      moduleType:
        $ref: '#/components/ModuleType'
      weight:
        type: integer
        description: Weight of the module within the slotId
      version:
        type: integer
        description: Version of the module

  ModuleType:
    type: string
    enum:
      - TEXT
      - HEADING
      - IMAGE
      - GALLERY
      - FORM
      # TODO: List all module categories

  ModuleRequestBody:
    type: object
    required:
      - slotId
      - moduleType
      - weight
      - version
    properties:
      slotId:
        type: integer
        format: int64
      moduleType:
        $ref: '#/components/ModuleType'
      weight:
        type: integer
      version:
        type: integer

  ModuleRequestBodyUpdate:
    type: object
    required:
      - slotId
      - weight
      - version
    properties:
      slotId:
        type: integer
        format: int64
      weight:
        type: integer
      version:
        type: integer

  ModuleResponseBody:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Id of the module